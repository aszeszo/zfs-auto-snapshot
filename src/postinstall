#!/bin/sh

#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright 2008 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#

# a postinstall script - adds zfssnap role.
# Return 0 if a user exists, 1 otherwise.
#

# Check if the first argument is 0, settting our return
# variable to an error otherwise
#
check_error() {
	RETURN_CODE=$1
	ERROR="$2"
        if [ "$RETURN_CODE" -ne 0 ] ; then
                echo "ERROR: $ERROR"
        fi
}

user_exists() {
        USER=$1
	/usr/bin/grep "^$USER:" $BASEDIR/etc/passwd > /dev/null
	return $?
}

auth_exists() {
	AUTH=$1
	/usr/bin/grep "^$AUTH:" $BASEDIR/etc/security/auth_attr > /dev/null
	return $?
}

# add our authorization
auth_exists solaris.smf.manage.zfs-auto-snapshot
if [ $? -ne 0 ] ; then
	echo "solaris.smf.manage.zfs-auto-snapshot:::Manage the ZFS Automatic Snapshot Service::" \
	>> /etc/security/auth_attr
fi

# add the zfssnap role - probably only works on a local system :-(
user_exists zfssnap
if [ $? -ne 0 ] ; then
	/usr/sbin/roleadd -d / -u 59501 -c "ZFS Automatic Snapshots role" \
	-P "ZFS File System Management" \
	-A solaris.smf.manage.zfs-auto-snapshot -m zfssnap
	check_error $? "Unable to create zfssnap role!"
	/usr/bin/passwd -r files -N zfssnap
	check_error $? "Unable to make zfssnap a no-password account"
else
	echo "zfssnap role already exists."
fi
